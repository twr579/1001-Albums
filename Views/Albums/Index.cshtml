@model IEnumerable<_1001Albums.Models.Album>
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Albums";
    var accountName = Configuration.GetSection("AzureStorageConfig")["AccountName"];
    var imageContainer = Configuration.GetSection("AzureStorageConfig")["ImageContainer"];
}

<h1>Albums</h1>

@if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
{   
<p>
    <a asp-action="Create">Create New</a>
</p>
}

<div class="container-fluid">
    @foreach (var item in Model.Reverse())
    {   
        <div class="card w-50 p-2 mx-auto my-4">
            <img class="card-img-top" src="@(Url.Content("https://" + accountName + ".blob.core.windows.net/" + imageContainer + "/" + item.ImagePath))" />
            <div class="card-body">
                <h5 class="card-title">@(item.Artist) - @(item.Title)</h5>
                <h6 class="card-subtitle mb-2 text-muted">@(item.CreatedAt)</h6>
                <p class="card-text">Released: @(item.ReleaseDate.ToShortDateString())</p>
                <p class="card-text">Genre: @(item.Genre)</p>
                <p class="card-text">My Rating: @(item.Rating)/10</p>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
                {
                    <a asp-action="Edit" class="card-link" asp-route-id="@item.Id">Edit</a>
                    <a asp-action="Delete" class="card-link" asp-route-id="@item.Id">Delete</a>
                }
            </div>
    </div>
    }
</div>
